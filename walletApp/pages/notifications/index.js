import { useEffect, useState } from "react";
import {
  Box,
  Heading,
  Text,
  UnorderedList,
  ListItem,
  Spinner,
} from "@chakra-ui/react";
import moment from "moment";

import { useDispatch, useSelector } from "react-redux";
import {
  fetchNotification,
  readNotification,
  selectIsLoading,
  selectNotifications,
  selectPagination,
} from "../../store/slices/NotificationSlice";

import { Pageinator } from "../../components/Paginator";

export default function Notifications() {
  const notifications = useSelector(selectNotifications);
  const dispatch = useDispatch();
  const pagination = useSelector(selectPagination);
  const isLoading = useSelector(selectIsLoading);
  const [page, setPage] = useState(1);
  const [isRefetch, setIsRefetch] = useState(true)

  useEffect(() => {
    dispatch(fetchNotification({ page: page, limit: 5, readAll :1 }));
  }, [page, isRefetch]);

  const onPageChange = (page) => {
    setPage(page);
  };
  return (
    <>
      {/* <Head>
                  <title>Notifications</title>
                  <meta name="description" content="Generated by create next app" />
                  <link rel="icon" href="/favicon.ico" />
              </Head> */}

      <Box flex="1">
        <Heading mb={"50px"} as={"h3"} size={"md"}>
          Notifications
        </Heading>
        <Box textAlign="center">{isLoading && <Spinner size="md" />}</Box>
        <UnorderedList listStyleType={"none"} ml={"0"}>
          {notifications?.map((notification, index) => {
            return (
              <>
                <ListItem
                  borderBottom={"solid 1px"}
                  borderColor={"#3B2864"}
                  mb={"30px"}
                  pb={"30px"}
                  px={"30px"}
                  pt={"30px"}
                  background={
                    notification.isRead ? "" : "rgba(255,255,255,0.2)"
                  }
                  _hover={{ cursor: "pointer" }}
                >
                  <Heading
                    display={"flex"}
                    alignItems={"center"}
                    justifyContent={"space-between"}
                    mb={"15px"}
                    as={"h4"}
                    size={"sm"}
                    fontSize={'22px'}
                    fontWeight={'500'}>
                      {notification?.title}
                    <Text
                      as={"span"}
                      color={"#9EA5B480"}
                      fontFamily={"Roboto"}
                      fontSize={"16px"}
                      fontWeight={"300"}
                    >
                      {moment(notification?.createdAt).format(
                          "YY-MM-DD hh:mm"
                      )}
                    </Text>
                  </Heading>
                  <Text fontSize={'16px'}>
                  <div dangerouslySetInnerHTML={{ __html: notification?.description }} />
                    {/* {notification?.description} */}
                  </Text>

                </ListItem>
              </>
            );
          })}
        </UnorderedList>
        <Pageinator
          current={page}
          onPageChange={onPageChange}
          total={pagination?.results}
          pageSize={5}
        />
      </Box>
    </>
  );
}
